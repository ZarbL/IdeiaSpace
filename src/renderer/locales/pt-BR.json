{
  "pageTitle": "Ferramenta de Programação de Missão Aeroespacial",
  "toggleLanguageTooltip": "Mudar para Inglês",
  "cppCodeTitle": "🧠 Código C++",
  "cppCodePlaceholder": "// Código C++ aparecerá aqui automaticamente",
  "runCodeTooltip": "Executar código",
  "copyCodeTooltip": "Copiar código",
  "copiedTooltip": "Copiado!",
  "copyFeedback": "Código copiado para a área de transferência!",
  "examplesButton": "Exemplos",
  "examplesTooltip": "Abrir galeria de exemplos Arduino",
  "examplesModalTitle": "Exemplos Arduino",
  "examplesDescription": "Selecione um sensor para carregar o código de exemplo:",
  "mpu6050Description": "Acelerômetro e Giroscópio",
  "bmp180Description": "Pressão e Temperatura",
  "bh1750Description": "Sensor de Luminosidade",
  "hmc5883Description": "Magnetômetro (Bússola)",
  "dht11Description": "Temperatura e Umidade",
  "darkModeTooltip": "Alternar tema escuro",
  "darkModeTooltipLight": "Alternar tema claro",
  "languageTooltip": "Alterar idioma",
  
  "_comment_blocks": "Traduções dos blocos",
  "delayBlockText": "⏱️ Atraso %1 milissegundos",
  "digitalWriteText": "escrever no pino digital %1 o valor %2",
  "digitalReadText": "ler o pino digital %1",
  
  "_comment_block_fields": "Campos dos blocos",
  "delay": "atraso",
  "milliseconds": "milissegundos",
  "digital_write_pin": "escrever no pino digital",
  "to": "para",
  "digital_read_pin": "ler pino digital",
  "declare": "declarar",
  "set": "definir",
  "initialize_mpu6050": "🔧 Inicializar MPU6050",
  "scl": "SCL:",
  "sda": "SDA:",
  "acceleration_x": "📊 Aceleração - X",
  "acceleration_y": "📊 Aceleração - Y",
  "acceleration_z": "📊 Aceleração - Z",
  "gyro_x": "🔄 Giro - X",
  "gyro_y": "🔄 Giro - Y", 
  "gyro_z": "🔄 Giro - Z",
  "pressure": "📊 Pressão",
  "temperature": "🌡️ Temperatura", 
  "altitude": "📏 Altura",
  "initialize_bmp180": "🔧 Inicializar BMP180",
  "initialize_bh1750": "💡 Inicializar BH1750",
  "light_level_lux": "☀️ Luminosidade (lux)",
  "configure_bh1750_mode": "⚙️ Configurar modo BH1750:",
  "start_bh1750": "🚀 Iniciar BH1750",
  "include_library": "📚 Incluir biblioteca",
  "include_basic_arduino": "📚 Incluir bibliotecas básicas Arduino",
  "include_wire": "📚 Incluir biblioteca Wire (I2C)",
  "include_adafruit": "📚 Biblioteca AdaFruit",
  "initialize_hmc5883": "🧭 Inicializar HMC5883",
  "hmc5883_begin": "🚀 HMC5883 Begin",
  "magnetic_field_x": "🧲 Campo Magnético - X",
  "magnetic_field_y": "🧲 Campo Magnético - Y",
  "magnetic_field_z": "🧲 Campo Magnético - Z",
  "compass_heading": "🧭 Direção da Bússola (graus)",
  "initialize_dht": "🔧 Inicializar DHT",
  "on_pin": "no pino",
  "dht_temperature": "🌡️ Temperatura DHT",
  "dht_humidity": "💧 Umidade DHT",
  "dht_begin": "🚀 DHT Begin",
  "calculate_heat_index": "🌡️🔥 Calcular Índice de Calor",
  "temperature_input": "Temperatura:",
  "humidity_input": "Umidade:",
  "condition_input": "Condição:",
  "hmc5883_initializer": "🧭 Inicializador HMC5883",
  "configure_hmc5883_gain": "⚙️ Configurar Ganho HMC5883:",
  "magnetic_declination": "🌍 Declinação Magnética:",
  "degrees": "graus",
  "cardinal_direction": "🧭 Direção Cardinal:",
  "sensor_hmc5883": "🔍 Sensor HMC5883:",
  "display_sensor_hmc5883": "📋 Display do Sensor HMC5883",
  "correct_heading": "🧭 Corrigir direção",
  "declination_input": "declinação:",
  "convert_to_degrees": "converter para graus",
  
  "_comment_libraries": "Blocos de Bibliotecas",
  "include_library_bmp180": "Incluir biblioteca BMP180",
  "include_library_mpu6050": "Incluir biblioteca MPU6050", 
  "include_library_dht": "Incluir biblioteca DHT",
  "include_library_wire": "Incluir biblioteca Wire (I2C)",
  "include_basic_arduino_libraries": "Incluir bibliotecas básicas Arduino",
  "adafruit_library": "Biblioteca AdaFruit",
  "include_library_bh1750": "Incluir biblioteca BH1750",
  "hmc5883_library": "Biblioteca HMC5883",
  "math_library": "Biblioteca Math",
  
  "_comment_text": "Blocos de Texto",
  "print_text": "📝 Imprimir",
  "newline": "quebra de linha:",
  "text_field": "💬",
  "join_text": "🔗 Juntar texto",
  "with": "com",
  
  "_comment_categories": "Categorias do Toolbox",
  "CAT_LOGIC": "Lógica",
  "CAT_CONTROL": "Controle",
  "CAT_MATH": "Matemática",  
  "CAT_TEXT": "Texto",
  "CAT_VARIABLES": "Variáveis",
  "CAT_FUNCTIONS": "Funções",
  "CAT_TIME": "Tempo",
  "CAT_LIBRARIES": "Bibliotecas",
  "CAT_SENSORS": "Sensores",
  
  "_comment_sensors": "Sensores Aeroespaciais",
  "CAT_MPU6050": "Medidas Inerciais (MPU6050)",
  "CAT_BMP180": "Pressão e Altitude (BMP180)",
  "CAT_BH1750": "Luminosidade (BH1750)",
  "CAT_HMC5883": "Magnetômetro (HMC5883)",
  "CAT_DHT": "Temperatura e Umidade (DHT)",
  "CAT_LED": "LED",
  "CAT_CALCULATOR": "Calculadora",
  "CAT_ULTRASOUND": "Ultrassom",
  
  "_comment_mpu6050": "Blocos MPU6050",
  "mpu6050_init": "🚀 Inicializar MPU6050",
  "mpu6050_accel_x": "📈 Aceleração X",
  "mpu6050_accel_y": "📈 Aceleração Y", 
  "mpu6050_accel_z": "📈 Aceleração Z",
  "mpu6050_gyro_x": "🔄 Giro X",
  "mpu6050_gyro_y": "🔄 Giro Y",
  "mpu6050_gyro_z": "🔄 Giro Z",
  "mpu6050_read": "📡 Ler MPU6050",
  "mpu6050_not": "❌ !mpu.begin()",
  
  "_comment_mpu6050_options": "Opções MPU6050",
  "ACCEL_X": "Aceleração X",
  "ACCEL_Y": "Aceleração Y",
  "ACCEL_Z": "Aceleração Z",
  "GYRO_X": "Giro X",
  "GYRO_Y": "Giro Y", 
  "GYRO_Z": "Giro Z",
  
  "_comment_bmp180": "Blocos BMP180",
  "bmp180_init": "🌡️ Inicializar BMP180",
  "bmp180_temperature": "🌡️ Temperatura",
  "bmp180_pressure": "📊 Pressão",
  "bmp180_altitude": "⛰️ Altitude",
  
  "_comment_tooltips": "Tooltips dos blocos",
  "mpu6050_init_tooltip": "Inicializa o sensor de movimento MPU6050 para medições inerciais da missão",
  "mpu6050_read_tooltip": "Lê dados de aceleração ou rotação do MPU6050 para análise de movimento",
  "mpu6050_not_tooltip": "Verifica se o MPU6050 NÃO foi inicializado corretamente",
  "bmp180_init_tooltip": "Inicializa o sensor BMP180 para medições de pressão e altitude",
  "bmp180_temperature_tooltip": "Lê a temperatura ambiente do sensor BMP180",
  "bmp180_pressure_tooltip": "Lê a pressão atmosférica do sensor BMP180",
  "bmp180_altitude_tooltip": "Calcula a altitude baseada na pressão atmosférica",
  "delay_tooltip": "Pausa a execução por um número específico de milissegundos",
  
  "_comment_variables": "Sistema de Variáveis",
  "createVariableButton": "➕ Criar Nova Variável",
  "variableModalTitle": "📝 Criar Nova Variável",
  "variableNameLabel": "Nome da Variável:",
  "variableNamePlaceholder": "Digite o nome da variável...",
  "createVariableBtn": "✅ Criar Variável",
  "cancelVariableBtn": "❌ Cancelar",
  "variableCreatedSuccess": "✅ Variável \"%1\" criada com sucesso!",
  "variableInvalidName": "⚠️ Por favor, digite um nome válido para a variável!",
  "variableAlreadyExists": "❌ Uma variável com este nome já existe!",
  
  "library_arduino_basic": "📚 Arduino Básico",
  "library_wire": "🔌 Wire (I2C)",
  "library_adafruit": "🎛️ Adafruit Unified Sensor",
  "library_sensor": "📡 Sensor Genérico",
  "library_bmp180": "🌡️ BMP180",
  "library_mpu6050": "🚀 MPU6050",
  "library_dht": "💧 DHT",
  
  "_comment_buttons": "Botões da interface",
  "executeButton": "Executar",
  "copyButton": "Copiar",
  
  "_comment_arduino_modal": "Modal Arduino CLI",
  "arduinoModalTitle": "Arduino Development Environment",
  "arduinoModalSubtitle": "Compile, Upload & Monitor",
  "connectionStatus": "Status da Conexão",
  "connected": "Conectado",
  "disconnected": "Desconectado",
  "uploadTab": "Upload",
  "consoleTab": "Console",
  "plotterTab": "Serial Plotter",
  "codeTab": "Código",
  "uploadCompilation": "Upload & Compilação",
  "serialConsole": "Console Serial",
  "serialPlotter": "Serial Plotter",
  "boardConfiguration": "Configuração da Placa",
  "boardType": "Tipo de Placa",
  "uploadPort": "Porta de Upload",
  "selectPort": "Selecionar porta...",
  "actions": "Ações",
  "uploadCode": "Upload Código",
  "compileCode": "Compilar",
  "installationLogs": "Logs de Instalação",
  "ready": "Pronto",
  "active": "Ativo",
  "waitingData": "Aguardando dados",
  "backendOffline": "Backend Offline",
  "backendOnline": "Backend Online", 
  "startBackend": "Iniciar Backend",
  "stopBackend": "Parar Backend",
  "serialPort": "Porta Serial",
  "baudRate": "Baud Rate",
  "connectButton": "Conectar",
  "statistics": "Estatísticas",
  "messages": "Mensagens",
  "status": "Status",
  "connecting": "Conectando...",
  "portsAvailable": "porta(s) disponível(eis)",
  
  "_comment_additional_ui": "Elementos adicionais da interface",
  "refresh": "Atualizar",
  "send": "Enviar", 
  "pause": "Pausar",
  "clear": "Limpar",
  "exportCsv": "Exportar CSV",
  "download": "Download",
  "copy": "Copiar",
  "example": "Exemplo",
  "commandPlaceholder": "Digite um comando para enviar ao ESP32...",
  "plotterEmpty": "Conecte ao ESP32 e envie dados do sensor para ver o gráfico",
  "formatExpected": "Formato esperado: AX,AY,AZ,GX,GY,GZ (valores separados por vírgula)",
  "exampleFormat": "Exemplo: 1.23,2.34,3.45,0.56,0.67,0.78",
  "compilationLogs": "Logs de Compilação",
  "clickUpload": "Clique em \"Upload\" para ver os logs",
  "serialConsoleEmpty": "Conecte a uma porta serial",
  "noCode": "Nenhum código foi gerado ainda",
  "useBlockEditor": "Use o editor de blocos para criar seu programa Arduino",
  "autoConvert": "Os blocos serão convertidos automaticamente em código C++",
  "searchTip": "Use Ctrl+F para buscar no código, ou role horizontalmente se necessário",
  "addSetupLoop": "Adicione os blocos setup() e loop()",
  "examples": "Exemplos"
}